{"version":3,"sources":["api.js","actions/login.js","actions/logout.js","actions/Home.js","actions/Protected.js","components/AppNav.js","components/AppProgressBar.js","components/Home.js","components/Protected.js","components/Login.js","App.js","reducers/Auth.js","reducers/isLoading.js","reducers/Home.js","reducers/Protected.js","reducers/index.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","login","_ref","history","username","password","dispatch","type","isLoading","API","post","then","res","Auth","isAuthenticated","accessToken","data","access","refreshToken","refresh","statusCode","errMsg","console","log","localStorage","setItem","JSON","stringify","payload","Object","assign","push","catch","err","response","status","detail","logout","removeItem","Home","get","Protected","getState","config","headers","Authorization","concat","connect","state","onLogout","props","react_default","a","createElement","Navbar","bg","expand","lib","to","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","disabled","Form","inline","Button","variant","onClick","ProgressBar","animated","now","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onHome","Component","msg","HomeAction","onProtected","ProtectedAction","Login","_this","isEmpty","username_input","React","createRef","password_input","handle_submit","bind","assertThisInitialized","current","value","trim","setState","onLogin","Alert","Group","Label","Control","placeholder","ref","Text","withRouter","PrivateRoute","component","rest","objectWithoutProperties","react_router","render","pathname","from","location","App","react_router_dom","components_AppProgressBar","components_AppNav","Container","path","exact","App_PrivateRoute","initialAuth","arguments","length","undefined","action","combineReducers","Boolean","window","hostname","match","store","createStore","rootReducer","getItem","parse","loadState","applyMiddleware","thunk","ReactDOM","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.96e1096b.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default axios.create({\n    baseURL: 'https://suhasjwt.herokuapp.com/'\n})\n","import API from '../api'\n\nconst login = ({username, password}, history) => dispatch => {\n    dispatch({\n        type:'ISLOADING',\n        isLoading: true\n    })\n    API.post('api/token/', {\n        username,\n        password\n    })\n    .then(res => {\n        let Auth = {\n            isAuthenticated: true,\n            accessToken: res.data.access,\n            refreshToken: res.data.refresh,\n            statusCode: 200,\n            errMsg: ''\n        }\n        console.log(Auth)\n        localStorage.setItem('Auth', JSON.stringify(Auth))\n        dispatch({\n            type: 'AUTH',\n            payload: Object.assign({}, Auth)\n        })\n        history.push('/')\n        dispatch({\n            type: 'ISLOADING',\n            isLoading: false\n        })\n    })\n    .catch(err => {\n        let Auth = {\n            isAuthenticated: false,\n            accessToken: '',\n            refreshToken: '',\n            statusCode: err.response.status,\n            errMsg: err.response.data.detail\n        }\n        localStorage.setItem('Auth', JSON.stringify(Auth))\n        dispatch({\n            type: 'AUTH',\n            payload: Object.assign({}, Auth)\n        })\n        dispatch({\n            type: 'ISLOADING',\n            isLoading: false\n        })\n    })\n}\n\nexport default login\n","const logout = () => dispatch => {\n    localStorage.removeItem('Auth')\n    dispatch({\n        type: 'AUTH'\n    })\n}\n\nexport default logout\n","import API from '../api'\n\nconst Home = () => dispatch => {\n    dispatch({\n        type:'ISLOADING',\n        isLoading: true\n    })\n    API.get('public/')\n    .then(res => {\n        dispatch({\n            type: 'HOME',\n            payload: Object.assign({}, res.data)\n        })\n        dispatch({\n            type: 'ISLOADING',\n            isLoading: false\n        })\n    })\n    .catch(err => {\n        console.log(err)\n        dispatch({\n            type: 'ISLOADING',\n            isLoading: false\n        })\n    })\n}\n\nexport default Home\n","import API from '../api'\nimport logout from './logout'\n\nconst Protected = () => (dispatch, getState) => {\n    dispatch({\n        type:'ISLOADING',\n        isLoading: true\n    })\n    let config = {\n        headers: {\n            Authorization: `Bearer ${getState().Auth.accessToken}`\n        }\n    }\n    API.get('protected/', config)\n    .then(res => {\n        dispatch({\n            type: 'PROTECTED',\n            payload: Object.assign({}, res.data)\n        })\n        dispatch({\n            type: 'ISLOADING',\n            isLoading: false\n        })\n    })\n    .catch(err => {\n        console.log(err)\n        dispatch(logout())\n        dispatch({\n            type: 'ISLOADING',\n            isLoading: false\n        })\n    })\n}\n\nexport default Protected\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport {Navbar, Nav, Form, Button} from 'react-bootstrap'\nimport {LinkContainer} from 'react-router-bootstrap'\n\nimport {logout} from '../actions'\n\nconst AppNav = props =>    \n    <Navbar bg=\"light\" expand=\"lg\">\n        <LinkContainer to=\"/\">\n            <Navbar.Brand>Home</Navbar.Brand>\n        </LinkContainer>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n                {   \n                    props.isAuthenticated\n                    ? <LinkContainer to=\"/protected\">\n                        <Nav.Link>Protected</Nav.Link>\n                    </LinkContainer>\n                    : <Nav.Link disabled>\n                        Protected\n                    </Nav.Link>\n                }\n                {\n                    props.isAuthenticated\n                    ? <Form inline>\n                        <Button variant=\"primary\" onClick={props.onLogout}>Logout</Button>\n                    </Form>\n                    : <LinkContainer to=\"/login\">\n                        <Nav.Link>Login</Nav.Link>\n                    </LinkContainer>\n                }\n            </Nav>\n        </Navbar.Collapse>\n    </Navbar>\n\nconst state2props = state => ({\n    isAuthenticated: state.Auth.isAuthenticated\n})\n\nconst dispatch2props = dispatch => ({\n    onLogout: () => {\n        dispatch(logout())\n    }\n})\n\nexport default connect(state2props, dispatch2props)(AppNav)\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport {ProgressBar} from 'react-bootstrap'\n\nconst AppProgressBar = props => {\n    if(props.isLoading){\n        return <ProgressBar animated now={100} />\n    } else {\n        return <div/>\n    }\n}\n\nconst state2props = ({isLoading}) => ({\n    isLoading\n})\n\nexport default connect(state2props)(AppProgressBar)\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\n\nimport {Home as HomeAction} from '../actions'\n\nclass Home extends Component{\n    constructor(props){\n        super(props)\n    }\n    componentDidMount(){\n        this.props.onHome()\n    }\n    render(){\n        return <div>\n            {this.props.Home}\n        </div>\n    }\n}\n\nconst state2props = state => ({\n    Home: state.Home.msg\n})\n\nconst dispatch2props = dispatch => ({\n    onHome: () => {\n        dispatch(HomeAction())\n    }\n})\n\nexport default connect(state2props, dispatch2props)(Home)\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\n\nimport {Protected as ProtectedAction} from '../actions'\n\nclass Protected extends Component{\n    constructor(props){\n        super(props)\n    }\n    componentDidMount(){\n        this.props.onProtected()\n    }\n    render(){\n        return <div>\n            {this.props.Protected}\n        </div>\n    }\n}\n\nconst state2props = state => ({\n    Protected: state.Protected.msg\n})\n\nconst dispatch2props = dispatch => ({\n    onProtected: () => {\n        dispatch(ProtectedAction())\n    }\n})\n\nexport default connect(state2props, dispatch2props)(Protected)\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter} from 'react-router-dom'\nimport {Form, Button, Alert} from 'react-bootstrap'\n\nimport {login} from '../actions'\n\nclass Login extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            isEmpty: false\n        }\n        this.username_input = React.createRef()\n        this.password_input = React.createRef()\n        this.handle_submit = this.handle_submit.bind(this)\n    }\n    handle_submit(){\n        const username = this.username_input.current.value.trim()\n        const password = this.password_input.current.value.trim()\n        if(username && password){\n            this.setState({isEmpty: false})\n            this.props.onLogin({\n                username,\n                password\n            }, this.props.history)\n        } else{\n            this.setState({isEmpty: true})\n        }\n    }\n    render(){\n        return <Form>\n              {\n                  this.props.Auth.statusCode === 401\n                  ? <Alert variant=\"danger\">{this.props.Auth.errMsg}</Alert>\n                  : <div/>\n              }\n              {\n                  this.state.isEmpty\n                  ? <Alert variant=\"danger\">Please provide all the parameters</Alert>\n                  : <div/>\n              }\n              <Form.Group>\n                <Form.Label>User Name</Form.Label>\n                <Form.Control placeholder=\"User Name\" ref={this.username_input} />\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" ref={this.password_input} />\n              </Form.Group>\n              <Button variant=\"primary\" onClick={this.handle_submit}>\n                Login\n              </Button>\n              <Form.Text className=\"text-muted\">\n                You can test with the <b>User Name: visitor, Password: 123</b>, and also try with empty and invalid Credentials.\n              </Form.Text>\n            </Form>\n    }\n}\n\nconst dispatch2props = dispatch => ({\n    onLogin: (data, history) => {\n        dispatch(login(data, history))\n    }\n})\n\nconst state2props = ({Auth}) => ({\n    Auth\n})\n\nexport default withRouter(connect(state2props, dispatch2props)(Login))\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport {Container} from 'react-bootstrap'\nimport {BrowserRouter, Route, Redirect} from 'react-router-dom'\n\nimport {AppNav, AppProgressBar, Home, Protected, Login} from './components'\n\nlet PrivateRoute = ({component: Component, isAuthenticated, ...rest}) =>\n    <Route\n        {...rest}\n        render = {props =>\n            isAuthenticated\n            ? <Component {...props} />\n            : <Redirect\n                to = {{\n                    pathname: \"/login\",\n                    state: {from: props.location}\n                }}\n            />\n        }\n    />\n\nconst state2props = state => ({\n    isAuthenticated: state.Auth.isAuthenticated\n})\n\nPrivateRoute = connect(state2props, null)(PrivateRoute)\n\nconst App = props =>\n    <BrowserRouter>\n        <AppProgressBar />\n        <AppNav />\n        <Container className=\"pt-5\">\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/login\" component={Login} />\n            <PrivateRoute path=\"/protected\" component={Protected} />\n        </Container>\n    </BrowserRouter>\n\nexport default App\n","const initialAuth = {\n    isAuthenticated: false,\n    accessToken: '',\n    refreshToken: '',\n    statusCode: 0,\n    errMsg: ''\n}\n\nfunction Auth(state=initialAuth, action){\n    switch(action.type){\n        case 'AUTH':\n            if(action.payload === undefined){\n                return initialAuth\n            } else{\n                return action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default Auth\n","function isLoading(state=false, action){\n    switch(action.type){\n        case 'ISLOADING':\n            return action.isLoading\n        default:\n            return state\n    }\n}\n\nexport default isLoading\n","function Home(state={msg:''}, action){\n    switch(action.type){\n        case 'HOME':\n            return action.payload\n        default:\n            return state\n    }\n}\n\nexport default Home\n","function Protected(state={msg:''}, action){\n    switch(action.type){\n        case 'PROTECTED':\n            return action.payload\n        default:\n            return state\n    }\n}\n\nexport default Protected\n","import {combineReducers} from 'redux'\n\nimport Auth from './Auth'\nimport isLoading from './isLoading'\nimport Home from './Home'\nimport Protected from './Protected'\n\nexport default combineReducers({\n    Auth,\n    isLoading,\n    Home,\n    Protected\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/scss/bootstrap.scss'\nimport {createStore, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\n\nimport './logo.svg'\nimport App from './App'\nimport rootReducer from './reducers'\nimport * as serviceWorker from './serviceWorker'\n\nconst loadState = () => {\n    try{\n        let Auth = localStorage.getItem('Auth')\n        if(Auth === null){\n            return undefined\n        }\n        Auth = JSON.parse(Auth)\n        Auth.statusCode = 0\n        Auth.errMsg = ''\n        return {Auth}\n    } catch(err){\n        return undefined\n    }\n}\n\nconst store = createStore(rootReducer, loadState(), applyMiddleware(thunk))\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}