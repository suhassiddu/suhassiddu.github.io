{"version":3,"sources":["database/actions.js","database/AppTree.js","database/AppSort.js","database/AppTable.js","database/MysqlForm.js","database/App.js","database/reducers.js","database/index.js","csv/actions.js","csv/AppTree.js","csv/AppSort.js","csv/AppTable.js","csv/CsvForm.js","csv/App.js","csv/reducers.js","csv/index.js","App.js","serviceWorker.js","index.js"],"names":["base_url","config","headers","Content-Type","Access-Control-Allow-Origin","AppTree","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","left_input","React","createRef","right_input","join_input","handle_submit","bind","assertThisInitialized","on_update_column","mysql_host","mysqlform","mysql_user","mysql_passwd","left_column","current","value","trim","right_column","join_type","_","isEmpty","schema","react_default","a","createElement","Form","Group","controlId","Label","Control","as","ref","map","k","Button","variant","onClick","Component","connect","state","dispatch","form_data","data","FormData","append","type","payload","axios","method","url","then","res","assign","catch","err","console","log","AppSort","sort_input","type_input","downloadable_input","on_update_table","joinform","sort_column","sort_type","checked","downloadable","header","Check","defaultValue","label","Boolean","responseType","window","URL","createObjectURL","Blob","link","document","href","setAttribute","body","appendChild","click","table","rows","split","first_row","shift","Table","striped","bordered","hover","r","row","MysqlForm","on_update_schema","host_input","user_input","passwd_input","InputGroup","className","FormControl","name","placeholder","aria-label","aria-describedby","Append","App","database_MysqlForm","database_AppTree","database_AppSort","database_AppTable","combineReducers","arguments","length","undefined","action","store","createStore","rootReducer","applyMiddleware","thunk","Database","react_redux_es","database_App","left_file","csvform","right_file","csvhead","CsvForm","leftfile_input","rightfile_input","on_update_csvhead","files","csv_CsvForm","csv_AppTree","csv_AppSort","csv_AppTable","Csv","csv_App","Container","Tabs","defaultActiveKey","id","Tab","eventKey","title","database","csv","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7116e17e.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst base_url = 'https://suhasbusigence.herokuapp.com'\nconst config = { \n    headers: {\n        'Content-Type': 'multipart/form-data',\n        'Access-Control-Allow-Origin': '*'\n    }\n}\n\nexport const update_schema = data => dispatch => {\n    const form_data = new FormData()\n    form_data.append('mysql_host', data.mysql_host)\n    form_data.append('mysql_user', data.mysql_user)\n    form_data.append('mysql_passwd', data.mysql_passwd)\n    dispatch({\n        type: 'UPDATE_MYSQLFORM',\n        payload: {\n            mysql_host: data.mysql_host,\n            mysql_user: data.mysql_user,\n            mysql_passwd: data.mysql_passwd\n        }\n    })\n    return axios({\n        method: 'post',\n        url: base_url + '/database2schema/',\n        data: form_data,\n        config: config\n    })\n    .then(res => {\n        dispatch({\n            type: 'UPDATE_SCHEMA',\n            payload: Object.assign([], res.data)\n        })\n    })\n    .catch(err => console.log(err))\n}\n\nexport const update_column = data => dispatch => {\n    const form_data = new FormData()\n    form_data.append('mysql_host', data.mysql_host)\n    form_data.append('mysql_user', data.mysql_user)\n    form_data.append('mysql_passwd', data.mysql_passwd)\n    form_data.append('left_column', data.left_column)\n    form_data.append('right_column', data.right_column)\n    form_data.append('join_type', data.join_type)\n    dispatch({\n        type: 'UPDATE_JOINFORM',\n        payload: {\n            left_column: data.left_column,\n            right_column: data.right_column,\n            join_type: data.join_type\n        }\n    })\n    return axios({\n        method: 'post',\n        url: base_url + '/database2head/',\n        data: form_data,\n        config: config\n    })\n    .then(res => {\n        dispatch({\n            type: 'UPDATE_COLUMN',\n            payload: Object.assign([], res.data)\n        })\n    })\n    .catch(err => console.log(err))\n}\n\nexport const update_table = data => dispatch => {\n    const form_data = new FormData()\n    form_data.append('mysql_host', data.mysql_host)\n    form_data.append('mysql_user', data.mysql_user)\n    form_data.append('mysql_passwd', data.mysql_passwd)\n    form_data.append('left_column', data.left_column)\n    form_data.append('right_column', data.right_column)\n    form_data.append('join_type', data.join_type)\n    form_data.append('sort_column', data.sort_column)\n    form_data.append('sort_type', data.sort_type)\n    form_data.append('downloadable', data.downloadable)\n    if(Boolean(data.downloadable)){\n        return axios({\n            method: 'post',\n            url: base_url + '/databasetransform/',\n            data: form_data,\n            responseType: 'blob',\n            config: config\n        })\n        .then(res => {\n            const url = window.URL.createObjectURL(new Blob([res.data]))\n            const link = document.createElement('a')\n            link.href = url\n            link.setAttribute('download', 'databasetransform.csv')\n            document.body.appendChild(link)\n            link.click()\n        })\n        .catch(err => console.log(err))\n    }\n    else{\n        return axios({\n            method: 'post',\n            url: base_url + '/databasetransform/',\n            data: form_data,\n            config: config\n        })\n        .then(res => {\n            dispatch({\n                type: 'UPDATE_TABLE',\n                payload: res.data\n            })\n        })\n        .catch(err => console.log(err))\n    }\n}\n\nexport const on_update_schema = dispatch => ({\n    on_update_schema: form_data => {\n        dispatch(update_schema(form_data))\n    }\n})\n\nexport const on_update_column = dispatch => ({\n    on_update_column: form_data => {\n        dispatch(update_column(form_data))\n    }\n})\n\nexport const on_update_table = dispatch => ({\n    on_update_table: form_data => {\n        dispatch(update_table(form_data))\n    }\n})\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {Form, Button} from 'react-bootstrap'\nimport _ from 'lodash'\n\nimport {on_update_column} from './actions'\n\nclass AppTree extends Component{\n    constructor(props){\n        super(props)\n        this.left_input = React.createRef()\n        this.right_input = React.createRef()\n        this.join_input = React.createRef()\n        this.handle_submit = this.handle_submit.bind(this)\n    }\n    handle_submit(){\n        this.props.on_update_column({\n            mysql_host: this.props.mysqlform.mysql_host,\n            mysql_user: this.props.mysqlform.mysql_user,\n            mysql_passwd: this.props.mysqlform.mysql_passwd,\n            left_column: this.left_input.current.value.trim(),\n            right_column: this.right_input.current.value.trim(),\n            join_type: this.join_input.current.value.trim()\n        })\n    }\n    render(){    \n        if(_.isEmpty(this.props.schema)){\n            return (<div>No Schema</div>)\n        }\n        return(\n        <Form.Group controlId=\"exampleForm.ControlInput1\">\n            <Form.Label>Left Column</Form.Label>\n            <Form.Control as=\"select\" ref={this.left_input}>{\n                this.props.schema.map(k => \n                  <option value={k}>{k}</option>\n                )\n            }</Form.Control>\n            <Form.Label>Right Column</Form.Label>\n            <Form.Control as=\"select\" ref={this.right_input}>{\n                this.props.schema.map(k => \n                  <option value={k}>{k}</option>\n                )\n            }</Form.Control>\n            <Form.Label>Join Type</Form.Label>\n            <Form.Control as=\"select\" ref={this.join_input}>{\n                ['inner', 'outer', 'left', 'right'].map(k => \n                  <option value={k}>{k}</option>\n                )\n            }</Form.Control>\n            <Button variant=\"primary\" onClick={this.handle_submit}>\n                Update\n            </Button>\n        </Form.Group>\n        )\n    }\n}\n\n\nconst state2props = state => ({\n    schema: state.schema,\n    mysqlform: state.mysqlform\n})\n\nexport default connect(state2props, on_update_column)(AppTree)\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {Form, Button} from 'react-bootstrap'\nimport _ from 'lodash'\n\nimport {on_update_table} from './actions'\n\nclass AppSort extends Component{\n    constructor(props){\n        super(props)\n        this.sort_input = React.createRef()\n        this.type_input = React.createRef()\n        this.downloadable_input = React.createRef()\n        this.handle_submit = this.handle_submit.bind(this)\n    }\n    handle_submit(){\n        this.props.on_update_table({\n            mysql_host: this.props.mysqlform.mysql_host,\n            mysql_user: this.props.mysqlform.mysql_user,\n            mysql_passwd: this.props.mysqlform.mysql_passwd,\n            left_column: this.props.joinform.left_column,\n            right_column: this.props.joinform.right_column,\n            join_type: this.props.joinform.join_type,\n            sort_column: this.sort_input.current.value.trim(),\n            sort_type: this.type_input.current.checked,\n            downloadable: this.downloadable_input.current.checked\n        })\n    }\n    render(){    \n        if(_.isEmpty(this.props.header)){\n            return (<div>No Join header</div>)\n        }\n        return(\n        <Form.Group controlId=\"exampleForm.ControlInput1\">\n            <Form.Label>Sort Column</Form.Label>\n            <Form.Control as=\"select\" ref={this.sort_input}>{\n                this.props.header.map(k => \n                  <option value={k}>{k}</option>\n                )\n            }</Form.Control>\n            <Form.Check type=\"checkbox\" defaultValue={false} label=\"Sort Type\" ref={this.type_input} />\n            <Form.Check type=\"checkbox\" defaultValue={false} label=\"Downloadable\" ref={this.downloadable_input} />\n            <Button variant=\"primary\" onClick={this.handle_submit}>\n                Update\n            </Button>\n        </Form.Group>\n        )\n    }\n}\n\n\nconst state2props = state => ({\n    schema: state.schema,\n    header: state.header,\n    mysqlform: state.mysqlform,\n    joinform: state.joinform\n})\n\nexport default connect(state2props, on_update_table)(AppSort)\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport _ from 'lodash'\nimport {Table} from 'react-bootstrap'\n\nconst AppTable = props => {\n    if(_.isEmpty(props.table)){\n        return (<div>No Table</div>)\n    }\n    const rows = props.table.split('\\n')\n    const first_row = rows[0]\n    rows.shift()\n    return(\n        <Table striped bordered hover>\n          <thead>\n            <tr>{\n                first_row.split(',').map(r => <th>{r}</th>) \n            }</tr>\n          </thead>\n          <tbody>{\n            rows.map(row =>\n                <tr>{ row.split(',').map(r => <td>{r}</td>) }</tr>\n            ) \n          }</tbody>\n        </Table>\n    )\n}\n\nconst state2props = state => ({\n    table: state.table\n})\n\nexport default connect(state2props, null)(AppTable)\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {InputGroup, FormControl, Button, Form} from 'react-bootstrap'\nimport {on_update_schema} from './actions'\n\nclass MysqlForm extends Component{\n    constructor(props){\n        super(props)\n        this.handle_submit = this.handle_submit.bind(this)\n        this.host_input = React.createRef()\n        this.user_input = React.createRef()\n        this.passwd_input = React.createRef()\n    }\n    handle_submit = () => {\n        this.props.on_update_schema({\n            mysql_host: this.host_input.current.value.trim(),\n            mysql_user: this.user_input.current.value.trim(),\n            mysql_passwd: this.passwd_input.current.value.trim()\n        })\n    }\n    render(){\n        return(\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                <InputGroup className=\"mb-3\">\n                  <FormControl\n                      name=\"mysql_host\"\n                      ref={this.host_input}\n                      placeholder=\"Host\"\n                      aria-label=\"Host\"\n                      aria-describedby=\"basic-addon1\"\n                  />\n                  <FormControl\n                      name=\"mysql_user\"\n                      ref={this.user_input}\n                      placeholder=\"Username\"\n                      aria-label=\"Username\"\n                      aria-describedby=\"basic-addon1\"\n                  />\n                  <FormControl\n                      name=\"mysql_passwd\"\n                      ref={this.passwd_input}\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      aria-label=\"password\"\n                      aria-describedby=\"basic-addon1\"\n                  />\n                  <InputGroup.Append>\n                      <Button variant=\"outline-secondary\" onClick={this.handle_submit}>Connect</Button>\n                    </InputGroup.Append>\n                </InputGroup>\n            </Form.Group>\n        )\n    }\n}\n\nexport default connect(null, on_update_schema)(MysqlForm)\n","import React from 'react';\nimport AppTree from './AppTree'\nimport AppSort from './AppSort'\nimport AppTable from './AppTable'\nimport MysqlForm from './MysqlForm'\nimport {Form} from 'react-bootstrap'\n\nconst App = props =>\n    <Form>\n        <MysqlForm />\n        <AppTree />\n        <AppSort />\n        <AppTable />\n    </Form>\n\nexport default App;\n","import { combineReducers } from 'redux';\n\nfunction schema_reducer(state = [], action){\n    switch(action.type){\n        case 'UPDATE_SCHEMA':\n            return action.payload\n        default:\n            return state\n    }\n}\n\nfunction column_reducer(state = [], action){\n    switch(action.type){\n        case 'UPDATE_COLUMN':\n            return action.payload\n        default:\n            return state\n    }\n}\n\nfunction mysqlform_reducer(state = {}, action){\n    switch(action.type){\n        case 'UPDATE_MYSQLFORM':\n            return action.payload\n        default:\n            return state\n    }\n}\n\nfunction joinform_reducer(state = {}, action){\n    switch(action.type){\n        case 'UPDATE_JOINFORM':\n            return action.payload\n        default:\n            return state\n    }\n}\n\nfunction table_reducer(state = '', action){\n    switch(action.type){\n        case 'UPDATE_TABLE':\n            return action.payload\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({\n    schema: schema_reducer,\n    header: column_reducer,\n    mysqlform: mysqlform_reducer,\n    joinform: joinform_reducer,\n    table: table_reducer\n});\n","import React from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nconst Database = props =>\n    <Provider store={store}>\n        <App />\n    </Provider>\n\nexport default Database\n","import axios from 'axios'\n\nconst base_url = 'https://suhasbusigence.herokuapp.com'\nconst config = { \n    headers: {\n        'Content-Type': 'multipart/form-data',\n        'Access-Control-Allow-Origin': '*'\n    }\n}\n\nexport const update_csvhead = data => dispatch => {\n    const form_data = new FormData()\n    form_data.append('csv_files', data.left_file)\n    form_data.append('csv_files', data.right_file)\n    dispatch({\n        type: 'UPDATE_CSVFORM',\n        payload: {\n            left_file: data.left_file,\n            right_file: data.right_file\n        }\n    })\n    return axios({\n        method: 'post',\n        url: base_url + '/csv2head/',\n        data: form_data,\n        config\n    })\n    .then(res => {\n        dispatch({\n            type: 'UPDATE_CSVHEAD',\n            payload: Object.assign({}, res.data)\n        })\n    })\n    .catch(err => console.log(err))\n}\n\nexport const update_column = data => dispatch => {\n    const form_data = new FormData()\n    form_data.append('csv_files', data.left_file)\n    form_data.append('csv_files', data.right_file)\n    form_data.append('left_column', data.left_column)\n    form_data.append('right_column', data.right_column)\n    form_data.append('join_type', data.join_type)\n    dispatch({\n        type: 'UPDATE_JOINFORM',\n        payload: {\n            left_column: data.left_column,\n            right_column: data.right_column,\n            join_type: data.join_type\n        }\n    })\n    return axios({\n        method: 'post',\n        url: base_url + '/csv2joinhead/',\n        data: form_data,\n        config\n    })\n    .then(res => {\n        dispatch({\n            type: 'UPDATE_COLUMN',\n            payload: Object.assign([], res.data)\n        })\n    })\n    .catch(err => console.log(err))\n}\n\nexport const update_table = data => dispatch => {\n    const form_data = new FormData()\n    form_data.append('csv_files', data.left_file)\n    form_data.append('csv_files', data.right_file)\n    form_data.append('left_column', data.left_column)\n    form_data.append('right_column', data.right_column)\n    form_data.append('join_type', data.join_type)\n    form_data.append('sort_column', data.sort_column)\n    form_data.append('sort_type', data.sort_type)\n    form_data.append('downloadable', data.downloadable)\n    if(Boolean(data.downloadable)){\n        return axios({\n            method: 'post',\n            url: base_url + '/csvtransform/',\n            data: form_data,\n            responseType: 'blob',\n            config\n        })\n        .then(res => {\n            const url = window.URL.createObjectURL(new Blob([res.data]))\n            const link = document.createElement('a')\n            link.href = url\n            link.setAttribute('download', 'csvtransform.csv')\n            document.body.appendChild(link)\n            link.click()\n        })\n        .catch(err => console.log(err))\n    }\n    else{\n        return axios({\n            method: 'post',\n            url: base_url + '/csvtransform/',\n            data: form_data,\n            config\n        })\n        .then(res => {\n            dispatch({\n                type: 'UPDATE_TABLE',\n                payload: res.data\n            })\n        })\n        .catch(err => console.log(err))\n    }\n}\n\nexport const on_update_csvhead = dispatch => ({\n    on_update_csvhead: form_data => {\n        dispatch(update_csvhead(form_data))\n    }\n})\n\nexport const on_update_column = dispatch => ({\n    on_update_column: form_data => {\n        dispatch(update_column(form_data))\n    }\n})\n\nexport const on_update_table = dispatch => ({\n    on_update_table: form_data => {\n        dispatch(update_table(form_data))\n    }\n})\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {Form, Button} from 'react-bootstrap'\nimport _ from 'lodash'\n\nimport {on_update_column} from './actions'\n\nclass AppTree extends Component{\n    constructor(props){\n        super(props)\n        this.left_input = React.createRef()\n        this.right_input = React.createRef()\n        this.join_input = React.createRef()\n        this.handle_submit = this.handle_submit.bind(this)\n    }\n    handle_submit(){\n        this.props.on_update_column({\n            left_file: this.props.csvform.left_file,\n            right_file: this.props.csvform.right_file,\n            left_column: this.left_input.current.value.trim(),\n            right_column: this.right_input.current.value.trim(),\n            join_type: this.join_input.current.value.trim()\n        })\n    }\n    render(){    \n        if(_.isEmpty(this.props.csvhead)){\n            return (<div>No Csv Header</div>)\n        }\n        return(\n        <Form.Group controlId=\"exampleForm.ControlInput1\">\n            <Form.Label>Left Column</Form.Label>\n            <Form.Control as=\"select\" ref={this.left_input}>{\n                this.props.csvhead['df_a'].split(',').map(k => \n                  <option value={k}>{k}</option>\n                )\n            }</Form.Control>\n            <Form.Label>Right Column</Form.Label>\n            <Form.Control as=\"select\" ref={this.right_input}>{\n                this.props.csvhead['df_b'].split(',').map(k => \n                  <option value={k}>{k}</option>\n                )\n            }</Form.Control>\n            <Form.Label>Join Type</Form.Label>\n            <Form.Control as=\"select\" ref={this.join_input}>{\n                ['inner', 'outer', 'left', 'right'].map(k => \n                  <option value={k}>{k}</option>\n                )\n            }</Form.Control>\n            <Button variant=\"primary\" onClick={this.handle_submit}>\n                Update\n            </Button>\n        </Form.Group>\n        )\n    }\n}\n\n\nconst state2props = state => ({\n    csvhead: state.csvhead,\n    csvform: state.csvform\n})\n\nexport default connect(state2props, on_update_column)(AppTree)\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {Form, Button} from 'react-bootstrap'\nimport _ from 'lodash'\n\nimport {on_update_table} from './actions'\n\nclass AppSort extends Component{\n    constructor(props){\n        super(props)\n        this.sort_input = React.createRef()\n        this.type_input = React.createRef()\n        this.downloadable_input = React.createRef()\n        this.handle_submit = this.handle_submit.bind(this)\n    }\n    handle_submit(){\n        this.props.on_update_table({\n            left_file: this.props.csvform.left_file,\n            right_file: this.props.csvform.right_file,\n            left_column: this.props.joinform.left_column,\n            right_column: this.props.joinform.right_column,\n            join_type: this.props.joinform.join_type,\n            sort_column: this.sort_input.current.value.trim(),\n            sort_type: this.type_input.current.checked,\n            downloadable: this.downloadable_input.current.checked\n        })\n    }\n    render(){    \n        if(_.isEmpty(this.props.header)){\n            return (<div>No Join header</div>)\n        }\n        return(\n        <Form.Group controlId=\"exampleForm.ControlInput1\">\n            <Form.Label>Sort Column</Form.Label>\n            <Form.Control as=\"select\" ref={this.sort_input}>{\n                this.props.header.map(k => \n                  <option value={k}>{k}</option>\n                )\n            }</Form.Control>\n            <Form.Check type=\"checkbox\" defaultValue={false} label=\"Sort Type\" ref={this.type_input} />\n            <Form.Check type=\"checkbox\" defaultValue={false} label=\"Downloadable\" ref={this.downloadable_input} />\n            <Button variant=\"primary\" onClick={this.handle_submit}>\n                Update\n            </Button>\n        </Form.Group>\n        )\n    }\n}\n\n\nconst state2props = state => ({\n    csvhead: state.csvhead,\n    header: state.header,\n    csvform: state.csvform,\n    joinform: state.joinform\n})\n\nexport default connect(state2props, on_update_table)(AppSort)\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport _ from 'lodash'\nimport {Table} from 'react-bootstrap'\n\nconst AppTable = props => {\n    if(_.isEmpty(props.table)){\n        return (<div>No Table</div>)\n    }\n    const rows = props.table.split('\\n')\n    const first_row = rows[0]\n    rows.shift()\n    return(\n        <Table striped bordered hover>\n          <thead>\n            <tr>{\n                first_row.split(',').map(r => <th>{r}</th>) \n            }</tr>\n          </thead>\n          <tbody>{\n            rows.map(row =>\n                <tr>{ row.split(',').map(r => <td>{r}</td>) }</tr>\n            ) \n          }</tbody>\n        </Table>\n    )\n}\n\nconst state2props = state => ({\n    table: state.table\n})\n\nexport default connect(state2props, null)(AppTable)\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {Button, Form} from 'react-bootstrap'\nimport {on_update_csvhead} from './actions'\n\nclass CsvForm extends Component{\n    constructor(props){\n        super(props)\n        this.handle_submit = this.handle_submit.bind(this)\n        this.leftfile_input = React.createRef()\n        this.rightfile_input = React.createRef()\n    }\n    handle_submit(){\n        this.props.on_update_csvhead({\n            left_file: this.leftfile_input.current.files[0],\n            right_file: this.rightfile_input.current.files[0]\n        })\n    }\n    render(){\n        return(\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                <input type=\"file\" ref={this.leftfile_input} />\n                <input type=\"file\" ref={this.rightfile_input} />\n                <Button variant=\"primary\" onClick={this.handle_submit}>Update</Button>\n            </Form.Group>\n        )\n    }\n}\n\nexport default connect(null, on_update_csvhead)(CsvForm)\n","import React from 'react';\nimport AppTree from './AppTree'\nimport AppSort from './AppSort'\nimport AppTable from './AppTable'\nimport CsvForm from './CsvForm'\nimport {Form} from 'react-bootstrap'\n\nconst App = props =>\n    <Form>\n        <CsvForm />\n        <AppTree />\n        <AppSort />\n        <AppTable />\n    </Form>\n\nexport default App;\n","import { combineReducers } from 'redux';\n\nfunction csvhead_reducer(state = {}, action){\n    switch(action.type){\n        case 'UPDATE_CSVHEAD':\n            return action.payload\n        default:\n            return state\n    }\n}\n\nfunction column_reducer(state = [], action){\n    switch(action.type){\n        case 'UPDATE_COLUMN':\n            return action.payload\n        default:\n            return state\n    }\n}\n\nfunction csvform_reducer(state = {}, action){\n    switch(action.type){\n        case 'UPDATE_CSVFORM':\n            return action.payload\n        default:\n            return state\n    }\n}\n\nfunction joinform_reducer(state = {}, action){\n    switch(action.type){\n        case 'UPDATE_JOINFORM':\n            return action.payload\n        default:\n            return state\n    }\n}\n\nfunction table_reducer(state = '', action){\n    switch(action.type){\n        case 'UPDATE_TABLE':\n            return action.payload\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({\n    csvhead: csvhead_reducer,\n    header: column_reducer,\n    csvform: csvform_reducer,\n    joinform: joinform_reducer,\n    table: table_reducer\n});\n","import React from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nconst Csv = props =>\n    <Provider store={store}>\n        <App />\n    </Provider>\n\nexport default Csv\n","import React from 'react';\nimport {Container, Tabs, Tab} from 'react-bootstrap'\n\nimport Database from './database'\nimport Csv from './csv'\n\nconst App = props =>\n    <Container>\n        <Tabs defaultActiveKey=\"database\" id=\"uncontrolled-tab-example\">\n            <Tab eventKey=\"database\" title=\"Database\">\n                <Database />\n            </Tab>\n            <Tab eventKey=\"csv\" title=\"Csv\">\n                <Csv />\n            </Tab>\n        </Tabs>\n    </Container>\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}